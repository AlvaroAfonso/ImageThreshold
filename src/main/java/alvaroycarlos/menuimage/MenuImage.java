/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package alvaroycarlos.menuimage;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.regex.*;
import org.opencv.core.Core;
import org.opencv.imgcodecs.Imgcodecs;


/**
 *
 * @author alvaroafonsolopez
 */
public class MenuImage extends javax.swing.JFrame {
    
    JFileChooser fc = new JFileChooser();
    FileNameExtensionFilter filter = null;

    /** Creates new form MenuImage */
    public MenuImage() {
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        filter = new FileNameExtensionFilter("Imágenes","*.jpg","*.png","*.jpeg","jpg","png","jpeg");
        fc.addChoosableFileFilter(filter);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lienzo1 = new alvaroycarlos.menuimage.Lienzo();
        jMenuBar1 = new javax.swing.JMenuBar();
        files = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        vista = new javax.swing.JMenu();
        vistaOriginal = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        salir = new javax.swing.JMenuItem();
        editar = new javax.swing.JMenu();
        umbralizar = new javax.swing.JMenuItem();
        ayuda = new javax.swing.JMenu();
        informacion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lienzo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout lienzo1Layout = new javax.swing.GroupLayout(lienzo1);
        lienzo1.setLayout(lienzo1Layout);
        lienzo1Layout.setHorizontalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 946, Short.MAX_VALUE)
        );
        lienzo1Layout.setVerticalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 764, Short.MAX_VALUE)
        );

        files.setText("Imágenes");

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        files.add(abrir);

        guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        guardar.setText("Guardar umbralizada");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        files.add(guardar);

        vista.setText("Vista");

        vistaOriginal.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        vistaOriginal.setText("Imagen original");
        vistaOriginal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vistaOriginalActionPerformed(evt);
            }
        });
        vista.add(vistaOriginal);

        files.add(vista);
        files.add(jSeparator1);

        salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        files.add(salir);

        jMenuBar1.add(files);

        editar.setText("Editar");

        umbralizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        umbralizar.setText("Umbralizar");
        umbralizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralizarActionPerformed(evt);
            }
        });
        editar.add(umbralizar);

        jMenuBar1.add(editar);

        ayuda.setText("Ayuda");

        informacion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK));
        informacion.setText("Información de uso");
        informacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informacionActionPerformed(evt);
            }
        });
        ayuda.add(informacion);

        jMenuBar1.add(ayuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lienzo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lienzo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        
        if(lienzo1.getActImg() == null){
            JOptionPane.showConfirmDialog(this, "Primero debe cargar una imagen","Error",JOptionPane.CLOSED_OPTION);
            return;
        }
        
        if(lienzo1.getUmbImg() == null){
            JOptionPane.showConfirmDialog(this, "Primero debe umbralizar una imagen","Error",JOptionPane.CLOSED_OPTION);
            return;
        }
        
        int res = fc.showSaveDialog(null);
      
        if(res == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            String path = file.getAbsolutePath();
            String regex = "(^[a-zA-Z0-9._ -]+)\\.(jpeg|jpg|png)$"; 
            Pattern r = Pattern.compile(regex);
            Matcher m = r.matcher(file.getName());
            try{
                if(m.matches()){
                    Imgcodecs.imwrite(path, lienzo1.getUmbMat());
                }else{
                    JOptionPane.showConfirmDialog(this, "Debe guardar con alguno de estos formatos: png, jpg o jpeg","Error",JOptionPane.CLOSED_OPTION);
                }
            }catch(Exception ex){
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        
        int res = fc.showOpenDialog(null);
        boolean redimension = false;
        if(res == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            //System.out.println(file.getAbsolutePath());
            if(!lienzo1.correctSize(file)){
                int rp = JOptionPane.showConfirmDialog(this, "Hemos definido que la imagen debe ser como máximo de 950x694, ¿desea redimensionar?", "Redimensionar imagen", JOptionPane.YES_NO_OPTION);
                //System.out.println(rp);
                if(rp == 1){
                    return;
                }
                redimension = true;
            }
            lienzo1.loadImg(file, redimension);
        }   
    }//GEN-LAST:event_abrirActionPerformed

    private void umbralizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralizarActionPerformed
        
        if(lienzo1.getActImg() == null){
            JOptionPane.showConfirmDialog(this, "Primero debe cargar una imagen","Error",JOptionPane.CLOSED_OPTION);
            return;
        }
        String input = JOptionPane.showInputDialog(this, "Introduce un umbral", "Umbral", JOptionPane.OK_CANCEL_OPTION);
        int res;
        try{
            res = Integer.parseInt(input);
        }catch(Exception ex){
            System.out.println("Fallito");
            return;
        }
        
        //System.out.println("Umbralizando");
        lienzo1.umbralizar(res);
    }//GEN-LAST:event_umbralizarActionPerformed

    private void vistaOriginalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vistaOriginalActionPerformed
        if(lienzo1.getActImg() == null){
            JOptionPane.showConfirmDialog(this, "Debe cargar una imagen","Error",JOptionPane.CLOSED_OPTION);
        }
        if(lienzo1.getUmbImg() == null){
            //JOptionPane.showConfirmDialog(this, "Primero debe umbralizar una imagen","Error",JOptionPane.CLOSED_OPTION);
            return;
        }
        lienzo1.setChosen(0);
    }//GEN-LAST:event_vistaOriginalActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        int res = JOptionPane.showConfirmDialog(this, "¿Desea cerrar la ventena?", 
                "Finalizar programa", JOptionPane.YES_NO_OPTION);
        
        if (res == JOptionPane.YES_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_salirActionPerformed

    private void informacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informacionActionPerformed
        JOptionPane.showMessageDialog(this, 
                "El uso de esta aplicación consiste en cargar una imagen selecionada para poder aplicarle filtros de umbralizacion,"+
                        "\ncuyo resultado también podrá ser guardado en disco con el nombre elegido.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_informacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuImage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenu ayuda;
    private javax.swing.JMenu editar;
    private javax.swing.JMenu files;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JMenuItem informacion;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private alvaroycarlos.menuimage.Lienzo lienzo1;
    private javax.swing.JMenuItem salir;
    private javax.swing.JMenuItem umbralizar;
    private javax.swing.JMenu vista;
    private javax.swing.JMenuItem vistaOriginal;
    // End of variables declaration//GEN-END:variables

}
